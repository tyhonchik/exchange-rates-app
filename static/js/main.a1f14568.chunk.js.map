{"version":3,"sources":["store/actions/actions.js","store/reducers/reducers.js","store/reducers/index.js","store/store.js","store/localStorage.js","hoc/index.js","components/Currencies/CurrencyList/CurrencyListItem.js","components/Navbar/AddBlock.js","components/Currencies/CurrencyList/CurrencyList.js","components/Currencies/CurrencyList/index.js","components/Navbar/DeleteBlock.js","components/Navbar/Navbar.js","containers/Content/Home.js","components/Currencies/CurrencyInfo/CurrencyInfo.js","components/Currencies/CurrencyInfo/index.js","containers/Content/Info.js","App.js","index.js"],"names":["FETCH_CURRENCIES","FETCH_CURRENCIES_SUCCESS","FETCH_CURRENCIES_FAILURE","ADD_CURRENCY","FETCH_CURRENCY","FETCH_CURRENCY_SUCCESS","FETCH_CURRENCY_FAILURE","RESET_ACTIVE_CURRENCY","DELETE_CURRENCY","PROXY_URL","CURRENCY_LIST_URL","CURRENCY_ITEM_URL","fetchCurrenciesFailure","error","type","payload","fetchCurrencyFailure","addCurrency","currency","history","INITIAL_STATE","myCurrencies","currencies","currencyList","loading","activeCurrency","reducers","state","arguments","length","undefined","action","Object","objectSpread","message","filter","curr","id","push","currentCurrencies","parseInt","createBrowserHistory","basename","process","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","combineReducers","currs","CurrencyReducer","router","connectRouter","subscribe","stringify","setItem","saveState","getState","aux","props","children","listItemStyle","width","height","borderRadius","currencyListItem","react_default","a","createElement","Link","to","currId","style","textDecoration","card","interactive","title","color","country","AddBlock","renderCurrency","_ref","handleClick","modifiers","query","matchesPredicate","text","name","menuItem","active","label","key","onClick","filterCurrency","toLowerCase","indexOf","renderInputValue","handleValueChange","_this","suggest","itemPredicate","this","itemRenderer","items","toConsumableArray","noResults","disabled","inputValueRenderer","onItemSelect","popoverProps","popoverClassName","inputProps","placeholder","Component","connect","dispatch","CurrencyList","addBlock","Navbar_AddBlock","nonIdealState","marginTop","description","visual","className","margin","map","item","CurrencyListItem","DeleteBlock","currencyId","button","buttons","icon","deleteCurrency","globalState","ownProps","match","params","removeCurrency","Nav","renderRedirect","clear","go","fetchData","nav","isOpera","window","opr","addons","opera","navigator","userAgent","isFirefox","InstallTrigger","isEdge","document","documentMode","StyleMedia","isChrome","chrome","webstore","clearStorageBtn","tooltip","content","minimal","pageType","navbar","navbarGroup","align","Alignment","LEFT","navbarHeading","RIGHT","hoc","role","aria-label","Navbar_DeleteBlock","PureComponent","console","log","request","fetch","mode","method","headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","X-Requested-With","Content-Type","Origin","fetchCurrencies","then","response","ok","statusText","Error","json","catch","Home","Navbar","assign","Currencies_CurrencyList","blockStyle","padding","CurrencyInfo","resetMe","Date","prototype","timeNow","getHours","getMinutes","getSeconds","getTime","_this$props$activeCur","table","lib","striped","hover","options","noDataText","isKey","dataField","spinner","banks","buyArr","rate","buy","parseFloat","sellArr","sell","maxBuy","Math","max","minSell","min","tableCurrencyData","rateBuy","rateSell","pubTime","dt_last_published","phone","metro","data","tdStyle","whiteSpace","display","Info","fetchCurrency","Currencies_CurrencyInfo","App","Route","exact","path","component","ReactDOM","render","es","esm","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.a1f14568.chunk.js","sourcesContent":["//Currency list\r\nexport const FETCH_CURRENCIES = 'FETCH_CURRENCIES';\r\nexport const FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS';\r\nexport const FETCH_CURRENCIES_FAILURE = 'FETCH_CURRENCIES_FAILURE';\r\n\r\n//Add new currency to MyList\r\nexport const ADD_CURRENCY = 'ADD_CURRENCY';\r\nexport const ADD_CURRENCY_SUCCESS = 'ADD_CURRENCY_SUCCESS';\r\nexport const ADD_CURRENCY_FAILURE = 'ADD_CURRENCY_FAILURE';\r\nexport const RESET_ADDED_CURRENCY = 'RESET_ADDED_CURRENCY';\r\n\r\n//Fetch currency\r\nexport const FETCH_CURRENCY = 'FETCH_CURRENCY';\r\nexport const FETCH_CURRENCY_SUCCESS = 'FETCH_CURRENCY_SUCCESS';\r\nexport const FETCH_CURRENCY_FAILURE = 'FETCH_CURRENCY_FAILURE';\r\nexport const RESET_ACTIVE_CURRENCY = 'RESET_ACTIVE_CURRENCY';\r\n\r\n//Delete currency\r\nexport const DELETE_CURRENCY = 'DELETE_POST';\r\nexport const DELETE_CURRENCY_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_CURRENCY_FAILURE = 'DELETE_POST_FAILURE';\r\nexport const RESET_DELETED_CURRENCY = 'RESET_DELETED_CURRENCY';\r\n\r\nconst PROXY_URL = \"https://thingproxy.freeboard.io/fetch/\"; //\"https://cors2-fearless-parrot.eu-gb.mybluemix.net/\";    // IBM Bluemix\r\nconst CURRENCY_LIST_URL = \"https://cash.rbc.ru/cash/json/cash_currencies/\";\r\nconst CURRENCY_ITEM_URL = \"https://cash.rbc.ru/cash/json/cash_rates/?city=1&currency=\";\r\n\r\nexport function fetchCurrencies() {\r\n  console.log('azaz4');\r\n  const request = fetch(PROXY_URL + CURRENCY_LIST_URL, {\r\n    mode: 'cors',\r\n    method: 'GET',\r\n    headers: {\r\n      'Access-Control-Allow-Origin':'*',\r\n      'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      \"Content-Type\": \"application/json\",\r\n      'Origin': \"*\"\r\n    }\r\n  });\r\n  \r\n  return {\r\n    type: FETCH_CURRENCIES,\r\n    payload: request\r\n  };\r\n}\r\n\r\nexport function fetchCurrenciesSuccess(currencies) {\r\n  return {\r\n    type: FETCH_CURRENCIES_SUCCESS,\r\n    payload: currencies\r\n  };\r\n}\r\n\r\nexport function fetchCurrenciesFailure(error) {\r\n  return {\r\n    type: FETCH_CURRENCIES_FAILURE,\r\n    payload: error\r\n  };\r\n}\r\n\r\n\r\nexport function fetchCurrency(id) {\r\n  const request = fetch(PROXY_URL + CURRENCY_ITEM_URL + id, {\r\n    mode: 'cors',\r\n    method: 'GET',\r\n    headers: {\r\n      'Access-Control-Allow-Origin':'*',\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      \"Content-Type\": \"application/json\",\r\n      'Origin': '*'\r\n    }\r\n  });\r\n  \r\n  return {\r\n    type: FETCH_CURRENCY,\r\n    payload: request\r\n  };\r\n}\r\n\r\nexport function fetchCurrencySuccess(currency) {\r\n  return {\r\n    type: FETCH_CURRENCY_SUCCESS,\r\n    payload: currency\r\n  };\r\n}\r\n\r\nexport function fetchCurrencyFailure(error) {\r\n  return {\r\n    type: FETCH_CURRENCY_FAILURE,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function resetActiveCurrency() {\r\n  return {\r\n    type: RESET_ACTIVE_CURRENCY\r\n  }\r\n}\r\n\r\n\r\nexport function addCurrency(currency) {\r\n  return {\r\n    type: ADD_CURRENCY,\r\n    payload: currency\r\n  };\r\n}\r\n\r\nexport function removeCurrency(id) {\r\n  return {\r\n    type: DELETE_CURRENCY,\r\n    payload: id\r\n  };\r\n}","import {\r\n    FETCH_CURRENCIES, FETCH_CURRENCIES_SUCCESS, FETCH_CURRENCIES_FAILURE,\r\n    FETCH_CURRENCY, FETCH_CURRENCY_SUCCESS, FETCH_CURRENCY_FAILURE, RESET_ACTIVE_CURRENCY,\r\n    ADD_CURRENCY,// ADD_CURRENCY_SUCCESS, ADD_CURRENCY_FAILURE, RESET_ADDED_CURRENCY,\r\n    DELETE_CURRENCY,// DELETE_CURRENCY_SUCCESS, DELETE_CURRENCY_FAILURE, RESET_DELETED_CURRENCY\r\n} from '../actions/actions';\r\n\r\nconst INITIAL_STATE = {\r\n    myCurrencies: { currencies: [] },  //, error:null, loading: false\r\n    currencyList: { currencies: [], error: null, loading: false },\r\n    activeCurrency: { currency: null, error: null, loading: false },\r\n    // addedCurrency: { currency: null, error: null, loading: false },\r\n    // deletedCurrency: { currency: null, error: null, loading: false }\r\n\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    let error;\r\n    switch (action.type) {\r\n\r\n        case FETCH_CURRENCIES:// start fetching posts and set loading = true\r\n            return { ...state, currencyList: { currencies: [], error: null, loading: true } };\r\n        case FETCH_CURRENCIES_SUCCESS:// return list of posts and make loading = false\r\n            return { ...state, currencyList: { currencies: action.payload, error: null, loading: false } };\r\n        case FETCH_CURRENCIES_FAILURE:// return error and make loading = false\r\n            error = action.payload || { message: action.payload.message };\r\n            return { ...state, currencyList: { currencies: [], error: error, loading: false } };\r\n\r\n        case FETCH_CURRENCY:\r\n            return { ...state, activeCurrency: { ...state.activeCurrency, loading: true } };\r\n        case FETCH_CURRENCY_SUCCESS:\r\n            return { ...state, activeCurrency: { currency: action.payload, error: null, loading: false } };\r\n        case FETCH_CURRENCY_FAILURE:\r\n            error = action.payload || { message: action.payload.message };\r\n            return { ...state, activeCurrency: { currency: null, error: error, loading: false } };\r\n        case RESET_ACTIVE_CURRENCY:\r\n            return { ...state, activeCurrency: { currency: null, error: null, loading: false } };\r\n\r\n        // case ADD_CURRENCY:\r\n        //     return { ...state, addedCurrency: { ...state.addedCurrency, loading: true } }\r\n        // case ADD_CURRENCY_FAILURE:\r\n        //     error = action.payload || { message: action.payload.message };\r\n        //     return { ...state, addedCurrency: { currency: null, error: error, loading: false } }\r\n        // case RESET_ADDED_CURRENCY:\r\n        //     return { ...state, addedCurrency: { currency: null, error: null, loading: false } };\r\n\r\n        case ADD_CURRENCY:\r\n            let myCurrencies = { ...state.myCurrencies };\r\n\r\n            if (myCurrencies.currencies.filter(curr => curr.id === action.payload.id).length <= 0) {\r\n                myCurrencies.currencies.push(action.payload);\r\n            }\r\n\r\n            return { ...state, myCurrencies: { ...myCurrencies } }\r\n\r\n        case DELETE_CURRENCY:\r\n            const currentCurrencies = { ...state.myCurrencies };\r\n\r\n            if (currentCurrencies.currencies != null) {\r\n                currentCurrencies.currencies = currentCurrencies.currencies.filter(curr => curr.id !== parseInt(action.payload, 10));\r\n            }\r\n            return { ...state, myCurrencies: { ...currentCurrencies } }\r\n\r\n\r\n        // case DELETE_CURRENCY:\r\n        //     return { ...state, deletedCurrency: { ...state.deletedCurrency, loading: true } }\r\n        // case DELETE_CURRENCY_SUCCESS:\r\n        //     return { ...state, deletedCurrency: { currency: action.payload, error: null, loading: false } }\r\n        // case DELETE_CURRENCY_FAILURE:\r\n        //     error = action.payload || { message: action.payload.message };\r\n        //     return { ...state, deletedCurrency: { currency: null, error: error, loading: false } }\r\n        // case RESET_DELETED_CURRENCY:\r\n        //     return { ...state, deletedCurrency: { currency: null, error: null, loading: false } }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport CurrencyReducer from './reducers';\r\n\r\nexport default (history) => combineReducers({\r\n    currs: CurrencyReducer,\r\n    router: connectRouter(history)\r\n});","import thunk from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\r\n\r\n//const initialState = rootReducer.INITIAL_STATE;\r\n\r\nconst enhancers = [];\r\nconst middleware = [thunk, routerMiddleware(history)];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n  if (typeof devToolsExtension === \"function\") {\r\n    enhancers.push(devToolsExtension());\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n);\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  rootReducer(history),\r\n  persistedState, //initialState,\r\n  composedEnhancers\r\n);\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","export const loadState = () =>{\r\n    try{\r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState === null){\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    }catch(err){\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try{\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    }catch(err){}\r\n}","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from \"react\";\r\nimport { Card } from \"@blueprintjs/core\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst listItemStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    borderRadius:\"0px\"\r\n}\r\n\r\nconst currencyListItem = (props) => {\r\n    return (\r\n        <Link to={\"/info/\" + props.currId} style={{textDecoration:\"none\"}}>\r\n            <Card interactive={true}  style={listItemStyle}>\r\n                <h5>{props.title}</h5>\r\n                <small style={{textDecoration:\"none\", color:\"#333\"}}> {props.country ? \"Страна: \" + props.country : \"Глобальная валюта\"}</small>\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default currencyListItem;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Suggest } from \"@blueprintjs/select\";\r\nimport { MenuItem } from \"@blueprintjs/core\";\r\n\r\nimport { addCurrency } from \"../../store/actions/actions\";\r\n\r\nclass AddBlock extends Component {\r\n  renderCurrency = (currency, { handleClick, modifiers, query }) => {\r\n    if (!modifiers.matchesPredicate) {\r\n      return null;\r\n    }\r\n    const text = currency.name;\r\n    return (\r\n      <MenuItem\r\n        active={modifiers.active}\r\n        label={currency.country}\r\n        key={currency.id}\r\n        onClick={handleClick}\r\n        text={text}\r\n      />\r\n    );\r\n  };\r\n\r\n  filterCurrency = (query, currency) => {\r\n    return (\r\n      `${currency.name.toLowerCase()} ${\r\n        currency.country ? currency.country.toLowerCase() : \"\"\r\n      }`.indexOf(query.toLowerCase()) >= 0\r\n    );\r\n  };\r\n\r\n  renderInputValue = curr => curr.name;\r\n\r\n  handleValueChange = curr => this.props.addCurrency(curr);\r\n\r\n  render() {\r\n    return (\r\n      <Suggest\r\n        itemPredicate={this.filterCurrency}\r\n        itemRenderer={this.renderCurrency}\r\n        items={[...this.props.currencyList]}\r\n        noResults={<MenuItem disabled={true} text=\"Нет такой валюты\" />}\r\n        inputValueRenderer={this.renderInputValue}\r\n        onItemSelect={this.handleValueChange}\r\n        popoverProps={{popoverClassName: 'popover-list'}}\r\n        inputProps={{ placeholder: \"Код валюты или страна\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currencyList: state.currs.currencyList.currencies,\r\n    loading: state.currs.currencyList.loading,\r\n    error: state.currs.currencyList.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addCurrency: currency => dispatch(addCurrency(currency))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddBlock);\r\n","import React, { Component } from \"react\";\r\nimport CurrencyListItem from \"./CurrencyListItem\";\r\nimport { NonIdealState } from \"@blueprintjs/core\";\r\nimport AddBlock from '../../Navbar/AddBlock';\r\n\r\n\r\nclass CurrencyList extends Component {\r\n  render() {\r\n    if (\r\n      this.props.myCurrencies.currencies === null ||\r\n      this.props.myCurrencies.currencies.length === 0\r\n    ) {\r\n      const addBlock = <AddBlock {...this.props} />\r\n      return (\r\n        <NonIdealState\r\n          style={{ marginTop: \"80px\" }}\r\n          title=\"Ваш список валют пока пуст\"\r\n          description=\"Добавляйте из списка 👇\"\r\n          visual=\"geosearch\"\r\n          action={addBlock}\r\n          className=\"NonIdealState\"\r\n        />\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div style={{ width: \"47vw\", margin: \"55px auto\" }}>\r\n        <div className=\"currencyList\"> \r\n          {this.props.myCurrencies.currencies.map(item => (\r\n            <CurrencyListItem\r\n              key={item.id}\r\n              title={item.name}\r\n              country={item.country}\r\n              currId={item.id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrencyList;\r\n","import { connect } from \"react-redux\";\r\nimport CurrencyList from './CurrencyList';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        myCurrencies: state.currs.myCurrencies\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CurrencyList);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport { removeCurrency, addCurrency } from \"../../store/actions/actions\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nclass DeleteBlock extends Component {\r\n  render() {\r\n    let currency = null;\r\n    const currencyList = [...this.props.currencyList];\r\n    if (currencyList != null && currencyList.length > 0) {\r\n      currency = currencyList.filter(\r\n        item => item.id === parseInt(this.props.currencyId, 10)\r\n      )[0];\r\n    }\r\n\r\n    let button = null;\r\n\r\n    if (currency != null){\r\n        if(this.props.myCurrencies.filter(curr => curr.id === parseInt(currency.id, 10)).length <= 0) {\r\n            button = (\r\n              <Button\r\n                className=\"pt-minimal\"\r\n                icon=\"plus\"\r\n                text=\"Добавить эту валюту себе в список\"\r\n                onClick={() => this.props.addCurrency(currency)}\r\n              />\r\n            );\r\n          }\r\n          else{\r\n            button = (\r\n                <Button\r\n                  className=\"pt-minimal\"\r\n                  icon=\"delete\"\r\n                  text=\"Удалить из списка моих валют\"\r\n                  onClick={() => this.props.deleteCurrency(this.props.currencyId)}\r\n                />\r\n              );\r\n          }\r\n    } \r\n\r\n    return button;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (globalState, ownProps) => {\r\n  return {\r\n    currencyId: ownProps.match.params.id,\r\n    currencyList: globalState.currs.currencyList.currencies,\r\n    myCurrencies: globalState.currs.myCurrencies.currencies\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteCurrency: id => {\r\n      dispatch(removeCurrency(id));\r\n      dispatch(push(\"/\"));\r\n    },\r\n    addCurrency: currency => {\r\n      dispatch(addCurrency(currency));\r\n      dispatch(push(\"/\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DeleteBlock);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBlock from \"./AddBlock\";\r\nimport DeleteBlock from \"./DeleteBlock\";\r\nimport Aux from \"../../hoc\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCurrencies,\r\n  fetchCurrenciesFailure,\r\n  fetchCurrenciesSuccess\r\n} from \"../.././store/actions/actions\";\r\n\r\nimport {\r\n  Navbar,\r\n  Alignment,\r\n  NavbarGroup,\r\n  NavbarHeading,\r\n  Button,\r\n  Tooltip\r\n} from \"@blueprintjs/core\";\r\n\r\nclass Nav extends PureComponent {\r\n  componentDidMount() {\r\n    this.props.fetchData();\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    localStorage.clear();\r\n    \r\n    this.props.history.go('/');\r\n  };\r\n\r\n  render() {\r\n    let nav = null;\r\n    var isOpera = (!!window.opr && !!window.opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n\r\n    // Firefox 1.0+\r\n    var isFirefox = typeof InstallTrigger !== 'undefined';\r\n\r\n    // Internet Explorer 6-11\r\n    var isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n    // Edge 20+\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n\r\n    // Chrome 1+\r\n    var isChrome = !!window.chrome && !!window.chrome.webstore;\r\n\r\n    let clearStorageBtn = (\r\n      <Tooltip content=\"Очистить localStorage\">\r\n        <Button onClick={this.renderRedirect} minimal=\"true\" icon=\"trash\" />\r\n      </Tooltip>\r\n    );\r\n\r\n    if(!isChrome && !isOpera && !isEdge && !isFirefox){\r\n      clearStorageBtn = null;\r\n    }\r\n\r\n    switch (this.props.pageType) {\r\n      case \"home\":\r\n        nav = (\r\n          <Navbar>\r\n            <NavbarGroup align={Alignment.LEFT}>\r\n              <NavbarHeading>Мои валюты</NavbarHeading>\r\n              {clearStorageBtn}\r\n            </NavbarGroup>\r\n            <NavbarGroup align={Alignment.RIGHT}>\r\n              {this.props.myCurrencies > 0 ? (\r\n                <Aux>\r\n                  <span>\r\n                    добавлять валюту{\" \"}\r\n                    <span role=\"img\" aria-label=\"right\">\r\n                      👉\r\n                    </span>{\" \"}\r\n                  </span>\r\n                  <AddBlock {...this.props} />\r\n                </Aux>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </NavbarGroup>\r\n          </Navbar>\r\n        );\r\n\r\n        break;\r\n\r\n      case \"info\":\r\n        nav = (\r\n          <Navbar>\r\n            <NavbarGroup align={Alignment.LEFT}>\r\n              <Link to=\"/\">\r\n                <Button\r\n                  className=\"pt-minimal\"\r\n                  icon=\"arrow-left\"\r\n                  text=\"вернуться к списку\"\r\n                />\r\n              </Link>\r\n              {clearStorageBtn}\r\n            </NavbarGroup>\r\n            <NavbarGroup align={Alignment.RIGHT}>\r\n              <DeleteBlock {...this.props} />\r\n            </NavbarGroup>\r\n          </Navbar>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        nav = (\r\n          <Navbar>\r\n            <NavbarGroup align={Alignment.LEFT}>\r\n              <NavbarHeading>Мои валюты | default</NavbarHeading>\r\n              <Tooltip content=\"Очистить localStorage\">\r\n                <Button\r\n                  onClick={this.renderRedirect}\r\n                  minimal=\"true\"\r\n                  icon=\"trash\"\r\n                />\r\n              </Tooltip>\r\n            </NavbarGroup>\r\n          </Navbar>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return nav;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    myCurrencies: state.currs.myCurrencies.currencies.length,\r\n    currencyList: state.currs.currencyList.currencies,\r\n    loading: state.currs.currencyList.loading,\r\n    error: state.currs.currencyList.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchData: () =>\r\n      dispatch(fetchCurrencies())\r\n        .payload.then(response => {\r\n          if (!response.ok) {\r\n            dispatch(fetchCurrenciesFailure(response.statusText));\r\n            throw Error(response.statusText);\r\n          }\r\n          return response;\r\n        })\r\n        .then(response => response.json())\r\n        .then(items => dispatch(fetchCurrenciesSuccess(items)))\r\n        .catch(error => dispatch(fetchCurrenciesFailure(error)))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Nav);\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc\";\r\nimport CurrencyList from \"../../components/Currencies/CurrencyList\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\n\r\nclass Home extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <header>\r\n                    <Navbar pageType=\"home\" {...this.props}/>\r\n                </header>\r\n                <main>\r\n                    <CurrencyList />\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { PureComponent } from \"react\";\r\nimport Aux from \"../../../hoc\";\r\nimport { NonIdealState, Spinner } from \"@blueprintjs/core\";\r\n\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\n\r\nconst blockStyle = {\r\n  width: \"100%\",\r\n  padding: \"50px\"\r\n};\r\n\r\nclass CurrencyInfo extends PureComponent {\r\n  componentWillUnmount() {\r\n    this.props.resetMe();\r\n  }\r\n\r\n  getTime() {\r\n    Date.prototype.timeNow = function() {\r\n      return (\r\n        (this.getHours() < 10 ? \"0\" : \"\") +\r\n        this.getHours() +\r\n        \":\" +\r\n        (this.getMinutes() < 10 ? \"0\" : \"\") +\r\n        this.getMinutes() +\r\n        \":\" +\r\n        (this.getSeconds() < 10 ? \"0\" : \"\") +\r\n        this.getSeconds()\r\n      );\r\n    };\r\n  }\r\n\r\n  render() {\r\n    this.getTime();\r\n\r\n    const { currency, loading, error } = this.props.activeCurrency;\r\n\r\n    const currencyList = [...this.props.currencyList];\r\n    const activeCurrency = currencyList.filter(\r\n      item => item.id === parseInt(this.props.currencyId, 10)\r\n    )[0];\r\n\r\n    if (error) {\r\n      return (\r\n        <NonIdealState\r\n          style={{ marginTop: \"80px\" }}\r\n          title=\"Нет данных :(\"\r\n          description={error ? error.message : \"Ошибка получения данных\"}\r\n          visual=\"error\"\r\n          className=\"NonIdealState\"\r\n        />\r\n      );\r\n    }\r\n\r\n    let table = (\r\n      <BootstrapTable striped hover options={{ noDataText: \"...\" }}>\r\n        <TableHeaderColumn isKey dataField=\"name\">\r\n          Наименование\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"\">Покупка</TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"\">Продажа</TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"\">Дата обновления</TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"\">Телефон</TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"\">Метро</TableHeaderColumn>\r\n      </BootstrapTable>\r\n    );\r\n\r\n    if (currency != null) {\r\n      if (loading) {\r\n        return <Spinner className=\"spinner-custom\" />;\r\n      }\r\n      if (!activeCurrency && !loading) {\r\n        return (\r\n          <NonIdealState\r\n            style={{ marginTop: \"80px\" }}\r\n            title=\"Запрашиваемой Вами валюты нет  ¯\\_(ツ)_/¯\"\r\n            visual=\"heart-broken\"\r\n            className=\"NonIdealState\"\r\n          />\r\n        );\r\n      }\r\n\r\n      if (currency.banks != null && currency.banks.length > 0) {\r\n        const buyArr = currency.banks\r\n          .filter(item => item.rate.buy != null)\r\n          .map(item => parseFloat(item.rate.buy));\r\n\r\n        const sellArr = currency.banks\r\n          .filter(item => item.rate.sell != null)\r\n          .map(item => parseFloat(item.rate.sell));\r\n\r\n        if (buyArr.length > 0) {\r\n          activeCurrency.maxBuy = Math.max(...buyArr);\r\n        }\r\n\r\n        if (sellArr.length > 0) {\r\n          activeCurrency.minSell = Math.min(...sellArr);\r\n        }\r\n\r\n        const tableCurrencyData = currency.banks.map(item => {\r\n          const outItem = {\r\n            name: item.name,\r\n            rateBuy: item.rate.buy,\r\n            rateSell: item.rate.sell,\r\n            pubTime: new Date(item.dt_last_published).timeNow(),\r\n            phone: item.phone,\r\n            metro: item.metro\r\n              ? item.metro[0]\r\n                ? item.metro[0][0]\r\n                  ? item.metro[0][0]\r\n                  : \"-\"\r\n                : \"-\"\r\n              : \"-\"\r\n          };\r\n\r\n          return outItem;\r\n        });\r\n\r\n        table = (\r\n          <BootstrapTable data={tableCurrencyData} striped hover>\r\n            <TableHeaderColumn\r\n              isKey\r\n              dataField=\"name\"\r\n              tdStyle={{ whiteSpace: \"normal\" }}\r\n              width=\"230px\"\r\n            >\r\n              Наименование\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"rateBuy\" width=\"120\">\r\n              Покупка\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"rateSell\" width=\"120\">\r\n              Продажа\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"pubTime\" width=\"120\">\r\n              Дата обновления\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"phone\" width=\"150\">\r\n              Телефон\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn\r\n              dataField=\"metro\"\r\n              tdStyle={{ whiteSpace: \"normal\" }}\r\n              width=\"180\"\r\n            >\r\n              Метро\r\n            </TableHeaderColumn>\r\n          </BootstrapTable>\r\n        );\r\n      } else {\r\n        table = (\r\n          <BootstrapTable\r\n            striped\r\n            hover\r\n            options={{\r\n              noDataText:\r\n                \"Список курсов пуст.\\r\\n Ждем обновления информации от источника 🤞\"\r\n            }}\r\n          >\r\n            <TableHeaderColumn isKey dataField=\"name\">\r\n              Наименование\r\n            </TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"\">Покупка</TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"\">Продажа</TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"\">Дата обновления</TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"\">Телефон</TableHeaderColumn>\r\n            <TableHeaderColumn dataField=\"\">Метро</TableHeaderColumn>\r\n          </BootstrapTable>\r\n        );\r\n      }\r\n    } else if (!loading) {\r\n      return (\r\n        <NonIdealState\r\n          style={{ marginTop: \"80px\" }}\r\n          title=\"Запрашиваемой Вами валюты нет  ¯\\_(ツ)_/¯\"\r\n          visual=\"heart-broken\"\r\n          className=\"NonIdealState\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <div style={blockStyle}>\r\n          <h1\r\n            className={loading ? \"pt-skeleton\" : \"\"}\r\n            style={{ display: \"inline-block\" }}\r\n          >\r\n            {loading ? \"Loading\" : activeCurrency ? activeCurrency.name : \"---\"}\r\n          </h1>\r\n          {\"   \"}\r\n          <small className={loading ? \"pt-skeleton\" : \"\"}>\r\n            {activeCurrency\r\n              ? activeCurrency.country\r\n                ? activeCurrency.country\r\n                : \"Глобальная валюта\"\r\n              : \"Глобальная валюта\"}\r\n          </small>\r\n          <br />\r\n          <h6\r\n            className={loading ? \"pt-skeleton\" : \"\"}\r\n            style={{ display: \"table\" }}\r\n          >\r\n            Покупка (макс.):{\" \"}\r\n            {loading\r\n              ? \"Loading\"\r\n              : activeCurrency\r\n                ? activeCurrency.maxBuy\r\n                  ? activeCurrency.maxBuy\r\n                  : \"---\"\r\n                : \"---\"}{\" \"}\r\n            руб.\r\n          </h6>\r\n          <h6\r\n            className={loading ? \"pt-skeleton\" : \"\"}\r\n            style={{ display: \"table\" }}\r\n          >\r\n            Продажа (мин.):{\" \"}\r\n            {loading\r\n              ? \"Loading\"\r\n              : activeCurrency\r\n                ? activeCurrency.minSell\r\n                  ? activeCurrency.minSell\r\n                  : \"---\"\r\n                : \"---\"}{\" \"}\r\n            руб.\r\n          </h6>\r\n          <div style={{ marginTop: \"50px\" }}>{table}</div>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrencyInfo;\r\n","import { connect } from \"react-redux\";\r\nimport { resetActiveCurrency } from \"../../../store/actions/actions\";\r\nimport CurrencyInfo from './CurrencyInfo';\r\n\r\nconst mapStateToProps = (globalState, ownProps) => {\r\n    return {\r\n        activeCurrency: globalState.currs.activeCurrency,\r\n        currencyId: ownProps.match.params.id,\r\n        currencyList: globalState.currs.currencyList.currencies,\r\n        loading: globalState.currs.currencyList.loading,\r\n        error: globalState.currs.currencyList.error,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        resetMe: () => {\r\n            dispatch(resetActiveCurrency());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyInfo);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Aux from \"../../hoc\";\r\nimport CurrencyInfo from \"../../components/Currencies/CurrencyInfo\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\n\r\nimport {\r\n  fetchCurrency,\r\n  fetchCurrencyFailure,\r\n  fetchCurrencySuccess,\r\n} from \"../.././store/actions/actions\";\r\n\r\nclass Info extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCurrency(this.props.match.params.id)\r\n\r\n  }\r\n  \r\n  render() {      \r\n    return (\r\n      <Aux>\r\n        <header>\r\n          <Navbar pageType=\"info\" {...this.props} />\r\n        </header>\r\n        <main>\r\n          <CurrencyInfo {...this.props} />\r\n        </main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currencyList: state.currs.currencyList.currencies,\r\n    loading: state.currs.currencyList.loading,\r\n    error: state.currs.currencyList.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchCurrency: id => {\r\n      dispatch(fetchCurrency(id))\r\n        .payload.then(response => {\r\n          if (!response.ok) {\r\n            dispatch(fetchCurrencyFailure(response.statusText));\r\n            throw Error(response.statusText);\r\n          }\r\n          return response;\r\n        })\r\n        .then(response => response.json())\r\n        .then(item => dispatch(fetchCurrencySuccess(item)))\r\n        .catch(error => dispatch(fetchCurrencyFailure(error)));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Info);\r\n// export default Info;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Aux from \"./hoc\";\r\nimport { Route } from 'react-router-dom'\r\nimport Home from \"./containers/Content/Home\";\r\nimport Info from \"./containers/Content/Info\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/info/:id?\" component={Info} />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport store, { history } from './store/store'\r\n\r\nimport App from './App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n        <div>\r\n            <App />\r\n        </div>\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}